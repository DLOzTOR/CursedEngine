cmake_minimum_required(VERSION 3.20)
project(CursedEngine)

set(CMAKE_CXX_STANDARD 17)
set(CMAKE_CXX_STANDARD_REQUIRED ON)

set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/build)
set(CMAKE_LIBRARY_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/lib)

set(COMMON_INCLUDES
    ${CMAKE_SOURCE_DIR}/lib/glfw/include
    ${CMAKE_SOURCE_DIR}/lib/glew/include
    ${CMAKE_SOURCE_DIR}/lib/glm
    ${CMAKE_SOURCE_DIR}/lib/imgui
    ${CMAKE_SOURCE_DIR}/lib/imgui/backends
    ${CMAKE_SOURCE_DIR}/lib/simpleLogger/include
    ${CMAKE_SOURCE_DIR}/include
)

add_library(CursedEngine 
    src/Render/Shader.cpp
    src/Core/Window.cpp
    src/Core/Game.cpp
    lib/imgui/imgui.cpp
    lib/imgui/imgui_draw.cpp
    lib/imgui/imgui_widgets.cpp
    lib/imgui/imgui_tables.cpp
    lib/imgui/backends/imgui_impl_glfw.cpp
    lib/imgui/backends/imgui_impl_opengl3.cpp
)

set_target_properties(CursedEngine PROPERTIES
    ARCHIVE_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/build/lib
)

target_link_libraries(CursedEngine PRIVATE
    ${CMAKE_SOURCE_DIR}/lib/glew/x64/libglew32s.a
    opengl32
    ${CMAKE_SOURCE_DIR}/lib/glfw/libglfw3.a
    ${CMAKE_SOURCE_DIR}/lib/simpleLogger/libSimpleLogger.a
)

target_include_directories(CursedEngine PRIVATE
    ${COMMON_INCLUDES}
)

function(add_example EXAMPLE_NAME)
    add_executable(${EXAMPLE_NAME} examples/${EXAMPLE_NAME}.cpp)

    set_target_properties(${EXAMPLE_NAME} PROPERTIES
        RUNTIME_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/build/examples/${EXAMPLE_NAME}
    )

    target_link_libraries(${EXAMPLE_NAME} PRIVATE CursedEngine)
    target_include_directories(${EXAMPLE_NAME} PRIVATE ${COMMON_INCLUDES})
    target_compile_definitions(${EXAMPLE_NAME} PRIVATE GLEW_STATIC)
endfunction()

set(CMAKE_EXE_LINKER_FLAGS "-mwindows")

list(APPEND EXAMPLES
    Hello_triangle 
)
foreach(EXAMPLE ${EXAMPLES})
    add_example(${EXAMPLE})
endforeach()



target_compile_definitions(CursedEngine PRIVATE GLEW_STATIC)
